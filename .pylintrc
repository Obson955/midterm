[MASTER]
# Use multiple processes to speed up Pylint
jobs=4

# Control the amount of potential inferred values when inferring a single object
limit-inference-results=100

# Pickle collected data for later comparisons
persistent=yes

# List of plugins
load-plugins=

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may be loaded
extension-pkg-whitelist=

# Allow optimization of some AST trees, This will activate a peephole AST optimizer
optimize-ast=no

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels
confidence=

# Enable the message, report, category or checker with the given id(s)
enable=

# Disable the message, report, category or checker with the given id(s)
disable=
    # Common issues in test code
    trailing-whitespace,
    line-too-long,
    invalid-name,
    duplicate-code,
    redefined-outer-name,
    unused-argument,
    unused-import,
    unspecified-encoding,
    import-outside-toplevel,
    protected-access,
    wrong-import-order,
    fixme,
    # Documentation related
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    unused-variable

[REPORTS]
# Set the output format
output-format=text

# Put messages in a separate file for each module / package specified on the command line
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

[LOGGING]
# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=LF

# Regexp for a line that is allowed to be longer than the limit
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit
indent-string='    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren=4

# Expected style of indentation
indent-style=mixed

[BASIC]
# List of builtins
builtins=_

# Good variable names - allow single letter variables for tests and data science
# Added 'df' for DataFrame, 'a', 'b' for common test variables
good-names=i,j,k,ex,Run,_,id,df,a,b,f

# Bad variable names
bad-names=foo,bar,baz,toto,tutu,tata

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
# Modified to allow longer function names which are common in test methods
function-rgx=[a-z_][a-z0-9_]{2,60}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
# Allow for short argument names like 'a', 'b' common in tests
argument-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
# Modified to allow longer method names which are common in test methods
method-rgx=[a-z_][a-z0-9_]{2,60}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression which should only match function or class names that do not require a docstring
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter ones are exempt
docstring-min-length=-1

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=10

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

[TYPECHECK]
# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
ignored-modules=numpy,pandas

# List of classes names for which member attributes should not be checked
ignored-classes=SQLObject,optparse.Values,thread._local,_thread._local,numpy,pandas

# List of members which are set dynamically and missed by pylint inference system
generated-members=

# List of decorators that create context managers
contextmanager-decorators=contextlib.contextmanager

[VARIABLES]
# Tells whether we should check for unused import in __init__ files
init-import=no

# A regular expression matching the beginning of the name of dummy variables
dummy-variables-rgx=_$|dummy

# List of additional names supposed to be defined in builtins
additional-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

[DESIGN]
# Maximum number of arguments for function / method
max-args=10

# Maximum number of locals for function / method body
max-locals=25

# Maximum number of return / yield for function / method body
max-returns=10

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901)
max-parents=7

# Maximum number of attributes for a class (see R0902)
max-attributes=15

# Minimum number of public methods for a class (see R0903)
min-public-methods=1

# Maximum number of public methods for a class (see R0904)
max-public-methods=30

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make,_history_df

[IMPORTS]
# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

# Analyse import fallback blocks
analyse-fallback-blocks=no

# Deprecated modules which should not be used
deprecated-modules=stringprep,optparse

# Force import order to recognize a module as part of the standard compatibility libraries
known-standard-library=

# Force import order to recognize a module as part of a third party library
known-third-party=enchant,pytest,pandas,numpy

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=builtins.Exception